@page "/delete"
@using System.Net.Http

@inject HttpClient client

@using Newtonsoft.Json
@using Data

@using Microsoft.Extensions.Logging
@inject ILogger<Search> Logger


<div class="container-fluid">

    <div class="row justify-content-center" style="margin-bottom:50px">
        <h3 class="text-center">Store Apps - Delete Single App</h3>
    </div>

    <div class="row" style="margin:25px;">
        @if (StoreApps != null) {
            <table class="table table-bordered table-striped">
                <thead class="thead-dark">
                    <tr>
                        <th>Id</th>
                        <th>Name</th>
                        <th>Delete</th> <!--added delete to table head-->
                    </tr>
                </thead>
                <tbody>
                    @foreach (var storeapp in StoreApps) {
                    <tr class="justify-content-center">
                        <td>@storeapp.Id</td>
                        <td>@storeapp.Name</td>
                        <td><a href="#" onclick="()=>deleteRecord(storeapp)">Delete</a></td><!--added delete link to table row-->
                    </tr>
                    }
                </tbody>
            </table>
        }
        @if (!StoreApps.Any()) {
            <div class="justify-content-center">
                <h5>No records to show</h5>
            </div>
        }
    </div>

</div>

@code {

    string responseBody = "";
    List<StoreApp> StoreApps = new List<StoreApp>();

    protected override async Task OnInitializedAsync() {
        //changed path to url of API which is running on different port
        var apiName = "https://localhost:44308/api/StoreApps/FirstTen";
        var httpResponse = await client.GetAsync(apiName);

        if (httpResponse.IsSuccessStatusCode) {
            responseBody = await httpResponse.Content.ReadAsStringAsync();
            StoreApps = JsonConvert.DeserializeObject<List<StoreApp>>(responseBody);
            StateHasChanged();
        }

    }
}
