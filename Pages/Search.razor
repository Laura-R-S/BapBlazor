@page "/search"
@using System.Net.Http

@inject HttpClient client

@using Newtonsoft.Json
@using Data

@using Microsoft.Extensions.Logging
@inject ILogger<Search> Logger

<h1>Search</h1>

<p>This component demonstrates searching the datasaset.</p>


<EditForm Model="@searchModel" OnValidSubmit="@HandleSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <InputText id="name" @bind-Value="searchModel.InputValue" />
    <button type="submit">Search</button>


</EditForm>



<div class="container-fluid" style="background-color:cornsilk">


    <div class="row justify-content-center" style="margin-bottom:50px">
        <h3 class="text-center" style="color:cornflowerblue">Microsoft Store Apps:<br />App Data</h3>

    </div>

    <div class="row" style="margin:25px;">



        @if (StoreApps != null)
        {
            <table class="table table-bordered table-striped">
                <thead class="thead-light">
                    <tr>
                        <th>Id</th>
                        <th>Name</th>
                        <th>Rating</th>
                        <th>People</th>
                        <th>Category</th>
                        <th>Date</th>
                        <th>Price</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var storeapp in StoreApps)
                    {



                        <tr class="justify-content-center">
                            <td>@storeapp.Id</td>
                            <td>@storeapp.Name</td>
                            <td>@storeapp.Rating</td>
                            <td>@storeapp.People</td>
                            <td>@storeapp.Category</td>
                            <td>@storeapp.Date</td>
                            <td>@storeapp.Price</td>



                        </tr>
                    }
                </tbody>
            </table>}



        @if (StoreApps == null)
        {
            <div class="justify-content-center">
                <h5>No records to show</h5>
            </div>}



    </div>



</div>




@code {

    SearchModel searchModel = new SearchModel();


    string responseBody = " ";
    List<StoreApp> StoreApps = new List<StoreApp>();
    List<StoreApp> AllStoreApps = new List<StoreApp>();

    protected override async Task OnInitializedAsync()
    {
        //changed path to url of API which is running on different port
        var apiName = "https://team2-api.azurewebsites.net/api/StoreApps/";

        var httpResponse = await client.GetAsync(apiName);

        if (httpResponse.IsSuccessStatusCode)
        {
            responseBody = await httpResponse.Content.ReadAsStringAsync();
            StoreApps = JsonConvert.DeserializeObject<List<StoreApp>>(responseBody);
            AllStoreApps = StoreApps;
            StateHasChanged();

        }

    }
    public void HandleSubmit()
    {
        if (searchModel.InputValue == "" || searchModel.InputValue == null || searchModel.InputValue == " ")
        {
            StoreApps = AllStoreApps;


        }
        else
        {

            StoreApps = AllStoreApps.Where(app => app.Name.ToUpper() == searchModel.InputValue.ToUpper()).ToList();

            if (StoreApps.Count() == 0)
            {
                StoreApps = AllStoreApps.Where(app => app.Category.ToUpper() == searchModel.InputValue.ToUpper()).ToList();
            }


            Console.WriteLine(searchModel.InputValue);
  

        }

       


    }
} 